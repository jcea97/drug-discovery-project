# -*- coding: utf-8 -*-
"""app_2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CZb6ot0hmXGV76TIwiUtpk9XzriNgz42
"""

import streamlit as st
import pandas as pd
import subprocess
import os
import base64
import pickle

# Función para calcular descriptores moleculares
def desc_calc():
    bashCommand = "java -Xms2G -Xmx2G -Djava.awt.headless=true -jar ./PaDEL-Descriptor/PaDEL-Descriptor.jar -removesalt -standardizenitro -fingerprints -descriptortypes ./PaDEL-Descriptor/PubchemFingerprinter.xml -dir ./ -file descriptors_output.csv"
    process = subprocess.Popen(bashCommand.split(), stdout=subprocess.PIPE)
    output, error = process.communicate()
    os.remove('molecule.smi')

# Función para descargar archivos CSV
def filedownload(df):
    csv = df.to_csv(index=False)
    b64 = base64.b64encode(csv.encode()).decode()
    return f'<a href="data:file/csv;base64,{b64}" download="prediction.csv">Download Predictions</a>'

# Función para cargar el modelo y hacer predicciones
def build_model(input_data):
    load_model = pickle.load(open('acetylcholinesterase_model.pkl', 'rb'))
    prediction = load_model.predict(input_data)
    prediction_output = pd.Series(prediction, name='pIC50')
    molecule_name = pd.Series(load_data[1], name='molecule_name')
    df = pd.concat([molecule_name, prediction_output], axis=1)
    st.write(df)
    st.markdown(filedownload(df), unsafe_allow_html=True)

# Título de la aplicación
st.title("Bioactivity Prediction App")

# Barra lateral para subir archivo de entrada
uploaded_file = st.sidebar.file_uploader("Upload your input file", type=['txt'])

# Botón de predicción
if st.sidebar.button('Predict'):
    if uploaded_file is not None:
        load_data = pd.read_table(uploaded_file, sep=' ', header=None)
        load_data.to_csv('molecule.smi', sep='\t', header=False, index=False)
        st.write("**Original input data:**")
        st.write(load_data)

        with st.spinner("Calculating descriptors..."):
            desc_calc()

        desc = pd.read_csv('descriptors_output.csv')
        st.write("**Calculated Molecular Descriptors:**")
        st.write(desc)

        Xlist = list(pd.read_csv('descriptor_list.csv').columns)
        desc_subset = desc[Xlist]
        st.write("**Subset of Descriptors Used in Model:**")
        st.write(desc_subset)

        build_model(desc_subset)
    else:
        st.warning("Please upload a file before predicting.")